import math


# 시간초과 해결 . 2중 for문을 1 for문으로 바꾸고 공식이용. 시간초과의 대부분은 공식 이용하는거구나.. 엄마가 수학 열심히 하라고 한 이유가 있다.. 
def solution(k, d):
    answer=0
    for x in range(0,d+1,k):
        y=(d*d-x*x)**(0.5)
        # x 값이 증가할 때마다 y 값이 k씩 감소한다. 조건을 만족하는 해의 범위가 하나씩 더 증가해서 +1을 해준다.
        answer+=(int(y)//k)+1
    return answer

solution(1,5)
# 시간초과ㅋ
class Test1:
    def solution(k, d):
        answer=0
        for i in range(0,d+1,k):
            for j in range(0,d+1,k):
                if math.sqrt(pow(i,2)+pow(j,2))<=d:
                    answer+=1

        return answer
            































'''
점 찍기
문제 설명
좌표평면을 좋아하는 진수는 x축과 y축이 직교하는 2차원 좌표평면에 점을 찍으면서 놀고 있습니다. 진수는 두 양의 정수 k, d가 주어질 때 다음과 같이 점을 찍으려 합니다.

원점(0, 0)으로부터 x축 방향으로 a*k(a = 0, 1, 2, 3 ...), y축 방향으로 b*k(b = 0, 1, 2, 3 ...)만큼 떨어진 위치에 점을 찍습니다.
원점과 거리가 d를 넘는 위치에는 점을 찍지 않습니다.
예를 들어, k가 2, d가 4인 경우에는 (0, 0), (0, 2), (0, 4), (2, 0), (2, 2), (4, 0) 위치에 점을 찍어 총 6개의 점을 찍습니다.

정수 k와 원점과의 거리를 나타내는 정수 d가 주어졌을 때, 점이 총 몇 개 찍히는지 return 하는 solution 함수를 완성하세요.

제한사항
1 ≤ k ≤ 1,000,000
1 ≤ d ≤ 1,000,000
입출력 예
k	d	result
2	4	6
1	5	26

(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (3, 0), (3, 1), (3, 2), (3, 3), (3, 4), (4, 0), (4, 1), (4, 2), (4, 3), (5, 0) 위
'''

